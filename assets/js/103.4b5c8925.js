(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{455:function(v,_,t){"use strict";t.r(_);var e=t(42),r=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"分布式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分布式"}},[v._v("#")]),v._v(" 分布式")]),v._v(" "),t("h2",{attrs:{id:"相关术语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关术语"}},[v._v("#")]),v._v(" 相关术语")]),v._v(" "),t("p",[t("strong",[v._v("qps")]),v._v("：每秒的并发请求数 （Nginx：5w qps，Tomcat：200 qps）")]),v._v(" "),t("p",[t("strong",[v._v("集群")]),v._v("：镜像")]),v._v(" "),t("p",[t("strong",[v._v("分布式")]),v._v("：服务模块化拆分")]),v._v(" "),t("p",[t("strong",[v._v("SOA")]),v._v("：面向服务架构")]),v._v(" "),t("p",[t("strong",[v._v("SOA协议")])]),v._v(" "),t("ul",[t("li",[v._v("WebService（XML）：TCP -> Http -> SOAP")]),v._v(" "),t("li",[v._v("Dubbo（二进制）：TCP -> Dubbo协议")]),v._v(" "),t("li",[v._v("SpringCloud（HTTP）：TCP -> Http协议")])]),v._v(" "),t("p",[t("strong",[v._v("网络传输格式")])]),v._v(" "),t("ul",[t("li",[v._v("XML：文件大，性能低，结构严谨，可使用XSD校验")]),v._v(" "),t("li",[v._v("JSON：文件小，性能高，结构不严谨，可读性差")]),v._v(" "),t("li",[v._v("序列化：最小（二进制数据），性能最高，面向对象，无可读性")])]),v._v(" "),t("p",[t("strong",[v._v("DDD（Domain Driven Design）")])]),v._v(" "),t("p",[v._v("领域驱动设计，项目以Domain（实体类）的方式切入，先确定Domain再进行后续开发")]),v._v(" "),t("p",[v._v("https://www.jdon.com/")]),v._v(" "),t("p",[v._v("聚合根：将同类的领域实体聚合到一起，由一个 root 来管理设计、实现、改变状态的方法。")]),v._v(" "),t("p",[v._v("举例：")]),v._v(" "),t("p",[v._v("Teacher 有属性 name age price，有方法 teach() eat()")]),v._v(" "),t("p",[v._v("那么先设计出Teacher这个Domain再去技术选型，设计框架，需求分析等")]),v._v(" "),t("p",[t("strong",[v._v("Spring Cloud 和 Dubbo")])]),v._v(" "),t("p",[v._v("Dubbo基于dubbo协议，长连接，数据一致性得到保证，可用性下降")]),v._v(" "),t("p",[v._v("Spring Cloud 基于Http协议，短连接，降低数据一致性，提升可用性，优势是跨语言，可插拔")]),v._v(" "),t("h2",{attrs:{id:"cap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cap"}},[v._v("#")]),v._v(" CAP")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("Consistency 一致性")]),v._v(" "),t("p",[v._v("分布式系统中，数据在多节点存在副本，当数据发生了修改，那么数据同步无法在修改的"),t("font",{attrs:{color:"red"}},[v._v("瞬间")]),v._v("广播到所有副本节点，那么在读的时候就可能发生数据脏读")],1)]),v._v(" "),t("li",[t("p",[v._v("Availbility 可用性")]),v._v(" "),t("p",[v._v("指的是服务是否可用，范围涵盖终端客户访问我们的系统或者是集群内部相互通讯交换数据")]),v._v(" "),t("p",[v._v("也就是说在 Client 向 Server 发起请求时，服务器返回了正确的响应，称之为可用，反之为不可用")]),v._v(" "),t("p",[v._v("1S法则：是面向Web侧，H5链路上加载性能和体验方向上的一个指标")]),v._v(" "),t("ul",[t("li",[v._v("4G/WIFI下，1秒完全完成页面加载，包括首屏资源，可看亦可用;")]),v._v(" "),t("li",[v._v("3G下1秒完成首包的返回 ;")]),v._v(" "),t("li",[v._v("2G下1秒完成建连。")])])]),v._v(" "),t("li",[t("p",[v._v("Partition Torlerance 分区容错性")]),v._v(" "),t("p",[v._v("分布式网络中部分网络不可用，但系统依然正常对外提供服务。")])])]),v._v(" "),t("p",[v._v("CP：不同空间中的数据，如果要求他们所有状态一致，则必然不在同一时间。")]),v._v(" "),t("p",[v._v("AP：不同空间中，如果要求同一时间都可以从任意的空间拿到数据，则必然数据的状态不一致。")]),v._v(" "),t("p",[v._v("CA：不同空间的数据，如果要求任意时间都可以从任意空间拿到状态一致的数据，则空间数必然为1.")]),v._v(" "),t("p",[v._v("zookeepr："),t("strong",[v._v("CP")]),v._v("，即任何时刻对zookeeper的访问请求能得到一致性的数据结果，同时系统对网络分割具备容错性，但是它不能保证每次服务的可用性。从实际情况来分析，在使用zookeeper获取服务列表时，如果zk正在选举或者zk集群中半数以上的机器不可用，那么将无法获取数据。所以说，zk不能保证服务可用性。")]),v._v(" "),t("p",[v._v("eureka："),t("strong",[v._v("AP")]),v._v("，eureka在设计时优先保证可用性，每一个节点都是平等的，一部分节点挂掉不会影响到正常节点的工作，不会出现类似zk的选举leader的过程，客户端发现向某个节点注册或连接失败，会自动切换到其他的节点，只要有一台eureka存在，就可以保证整个服务处在可用状态，只不过有可能这个服务上的信息并不是最新的信息。")])])}),[],!1,null,null,null);_.default=r.exports}}]);