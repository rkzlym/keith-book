(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{390:function(t,a,s){"use strict";s.r(a);var n=s(42),p=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"计算机网络"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[t._v("#")]),t._v(" 计算机网络")]),t._v(" "),s("h2",{attrs:{id:"网络七层协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络七层协议"}},[t._v("#")]),t._v(" 网络七层协议")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210106222050238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjEwMzAyNg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),s("h2",{attrs:{id:"读取百度网页源代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读取百度网页源代码"}},[t._v("#")]),t._v(" 读取百度网页源代码")]),t._v(" "),s("p",[t._v("第一步：建立连接")]),t._v(" "),s("p",[t._v("第二步：传输数据（Http协议，规范标准）")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("cd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("proc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("$$"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("fd\nexec 8<> "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dev"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tcp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baidu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("80\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET /HTTP/1.0\\n'")]),t._v(" >& 8\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" 0<& 8\n")])])]),s("h2",{attrs:{id:"网络协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络协议"}},[t._v("#")]),t._v(" 网络协议")]),t._v(" "),s("p",[t._v("传输控制层：TCP，UDP")]),t._v(" "),s("h3",{attrs:{id:"tcp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[t._v("#")]),t._v(" TCP")]),t._v(" "),s("blockquote",[s("p",[t._v("三次握手 > 数据传输 > 四次挥手")]),t._v(" "),s("p",[t._v("称为一个最小粒度 -- 不可被分割")])]),t._v(" "),s("p",[t._v("TCP：面向连接的可靠的传输协议")]),t._v(" "),s("p",[t._v("TCP建立连接需要三次握手，三次握手之后双方才会在各自的内存开辟空间")]),t._v(" "),s("p",[t._v("一台服务器端口的数量：65535")]),t._v(" "),s("p",[t._v("对于服务器：通过一个端口号可以响应多个QPS")]),t._v(" "),s("p",[t._v("对于客户端：访问就要建立连接，即访问一个服务器就要占用一个端口")]),t._v(" "),s("p",[s("strong",[t._v("三次握手")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("客户端向服务器发出连接请求报文")])]),t._v(" "),s("li",[s("p",[t._v("TCP服务器收到请求报文后，如果同意连接，则发出确认报文")])]),t._v(" "),s("li",[s("p",[t._v("TCP客户进程收到确认后，还要向服务器给出确认")])])]),t._v(" "),s("p",[s("strong",[t._v("四次挥手")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("TCP发送一个FIN(结束)，用来关闭客户到服务端的连接")])]),t._v(" "),s("li",[s("p",[t._v("服务端收到这个FIN，他发回一个ACK(确认)")])]),t._v(" "),s("li",[s("p",[t._v("服务端发送一个FIN(结束)到客户端，服务端关闭客户端的连接")])]),t._v(" "),s("li",[s("p",[t._v("客户端发送ACK(确认)报文确认，并将确认的序号+1，这样关闭完成")])])]),t._v(" "),s("p",[s("strong",[t._v("查看Socket连接")])]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("netstat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("natp\nProto Recv"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Q "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Send-Q")]),t._v(" Local Address           Foreign Address         State       PID"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Program name\ntcp        0      0 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0:22              0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0:"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("               LISTEN      940"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sshd\ntcp        0     36 172"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("30"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("143"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("74:22        115"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("198"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("249"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("180:51816   ESTABLISHED 5789"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("sshd: root@pts\n")])])]),s("p",[t._v("Local Address：本地连接地址")]),t._v(" "),s("p",[t._v("Foregin Address：远程连接地址")]),t._v(" "),s("p",[t._v("0.0.0.0:22 相当于主进程，当有客户端请求成功，就抛出一个线程进行连接")]),t._v(" "),s("p",[s("strong",[t._v("TCP在网络拥堵时的处理")])]),t._v(" "),s("blockquote",[s("p",[t._v("堵塞控制是调节 TCP 连接上单次发送的分组数量的算法，通过增减单次发送量逐步调整，使之逼近当前网络的承载量")])]),t._v(" "),s("p",[t._v("https://blog.csdn.net/itworld123/article/details/102983947")]),t._v(" "),s("p",[t._v("慢开始（slow - start）")]),t._v(" "),s("p",[t._v("堵塞避免（congestion avoidance）")]),t._v(" "),s("p",[t._v("快重传（fast retransmit）")]),t._v(" "),s("p",[t._v("快恢复（fast recovery）")]),t._v(" "),s("h3",{attrs:{id:"ip地址、子网掩码、网关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip地址、子网掩码、网关"}},[t._v("#")]),t._v(" IP地址、子网掩码、网关")]),t._v(" "),s("p",[t._v("ip地址和子网掩码会进行按位与运算")]),t._v(" "),s("p",[t._v("举例说明")]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("IPADDR=192"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("168"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("150"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("14\nNETMASK=255"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("255"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("255"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按位与 运算后 ip = 192.168.150.0 ，你所处的网段是192.168.150")]),t._v("\n")])])]),s("p",[s("strong",[t._v("查看路由表")])]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("route "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n\n\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0         172"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("30"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("143"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("253  0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0         UG    0      0        0 eth0\n169"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("254"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0     0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0         255"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("255"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0     U     1002   0        0 eth0\n172"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0      0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0         255"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("255"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0     U     0      0        0 docker0\n172"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("30"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("128"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0    0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0         255"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("255"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("240"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0   U     0      0        0 eth0\n")])])]),s("p",[s("code",[t._v("gateway 0.0.0.0")]),t._v(" 解释：同一局域网内无需通过下一跳通信，可以直接通信。")]),t._v(" "),s("p",[t._v("如果想访问一个外网地址 "),s("code",[t._v("69.135.169.121")]),t._v(" 他会先与子网掩码做 "),s("code",[t._v("按位与运算")]),t._v("，做完运算再判断是否处在那个网段，只有匹配上了再进行转发。")]),t._v(" "),s("p",[t._v("如上述路由表，"),s("code",[t._v("69.135.169.121")]),t._v(" 与运算后只能跟 "),s("code",[t._v("0.0.0.0")]),t._v(" 所匹配，所以会找到这个网关跳出局域网转发出去。")]),t._v(" "),s("p",[s("strong",[t._v("查看IP地址和网卡硬件地址的映射")])]),t._v(" "),s("div",{staticClass:"language-powershell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-powershell"}},[s("code",[t._v("arp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a\n\n? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("172"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" at 02:42:"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ac")]),t._v(":11:00:04 "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ether]")]),t._v(" on docker0\ngateway "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("172"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("30"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("143"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("253"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" at ee:ff:ff:ff:ff:ff "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ether]")]),t._v(" on eth0\n? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("172"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" at 02:42:"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ac")]),t._v(":11:00:03 "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ether]")]),t._v(" on docker0\n? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("172"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" at 02:42:"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ac")]),t._v(":11:00:05 "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ether]")]),t._v(" on docker0\n? "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("172"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("17"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" at 02:42:"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ac")]),t._v(":11:00:02 "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("[ether]")]),t._v(" on docker0\n")])])]),s("p",[t._v("结论：TCP/IP协议，基于下一跳机制，IP是基于端点间，mac是基于节点间。")]),t._v(" "),s("h3",{attrs:{id:"浏览器同源策略与跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器同源策略与跨域"}},[t._v("#")]),t._v(" 浏览器同源策略与跨域")]),t._v(" "),s("h4",{attrs:{id:"同源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同源"}},[t._v("#")]),t._v(" 同源")]),t._v(" "),s("p",[t._v("域名、协议、端口都会造成不同源")]),t._v(" "),s("p",[t._v("浏览器的同源策略是一种安全功能，同源策略限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。所以a.com下的js脚本采用ajax读取b.com里面的文件数据是会报错的。")]),t._v(" "),s("h4",{attrs:{id:"跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[t._v("#")]),t._v(" 跨域")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<script>、<img> 、<iframe>、<link>、<video>这些标签都可以发起跨域请求\n")])])]),s("h5",{attrs:{id:"jsonp跨域访问原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsonp跨域访问原理"}},[t._v("#")]),t._v(" jsonp跨域访问原理")]),t._v(" "),s("p",[t._v("此方法只能发起GET请求，通过jsonp发送的请求，会随带 cookie 一起发送。")]),t._v(" "),s("h5",{attrs:{id:"cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cors"}},[t._v("#")]),t._v(" CORS")]),t._v(" "),s("p",[t._v("在浏览器中指定Origin来源，如果在服务器接受范围，请求则成功")]),t._v(" "),s("p",[t._v("CORS与JSONP的使用目的相同，但是比JSONP更强大。")]),t._v(" "),s("p",[t._v("JSONP只支持 GET 请求，CORS支持所有类型的 HTTP 请求。")]),t._v(" "),s("p",[t._v("JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。")]),t._v(" "),s("h2",{attrs:{id:"https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),s("h3",{attrs:{id:"加密算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加密算法"}},[t._v("#")]),t._v(" 加密算法")]),t._v(" "),s("p",[t._v("对称加密：DES, 3DES, AEC")]),t._v(" "),s("p",[t._v("非对称加密：公钥、私钥，公钥通过私钥生成")]),t._v(" "),s("ol",[s("li",[t._v("明文 > 公钥加密 > 密文 > 私钥解密 > 明文")]),t._v(" "),s("li",[t._v("明文 > 私钥加密 > 密文 > 公钥解密 > 明文")])]),t._v(" "),s("p",[s("strong",[t._v("流程")])]),t._v(" "),s("p",[t._v("第一次请求，服务器把公钥返回给客户端")]),t._v(" "),s("p",[t._v("第二次请求，客户端拿刚下发的公钥对数据加密，发送给服务器")]),t._v(" "),s("p",[s("strong",[t._v("风险")])]),t._v(" "),s("p",[t._v("代理服务器拦截到这个请求，虽然解不开数据包，但是可以通过公钥加密发送一个伪请求")]),t._v(" "),s("p",[t._v("代理服务器还可以伪造公钥和私钥，浏览器无法判断公钥是不是真的服务器下发的")]),t._v(" "),s("h3",{attrs:{id:"证书和数字签名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#证书和数字签名"}},[t._v("#")]),t._v(" 证书和数字签名")]),t._v(" "),s("blockquote",[s("p",[t._v("可以解决伪造公钥私钥的问题")])]),t._v(" "),s("p",[t._v("Https中，客户端在走80端口前会先走443端口来获取服务端下发的证书，并生成加密的随机数给服务端")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210218212333383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjEwMzAyNg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})]),t._v(" "),s("p",[t._v("在向443发完请求之后，向80端口发请求")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210218205803436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjEwMzAyNg==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})])])}),[],!1,null,null,null);a.default=p.exports}}]);