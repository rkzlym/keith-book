(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{405:function(s,t,a){"use strict";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql-服务器参数设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-服务器参数设置"}},[s._v("#")]),s._v(" mysql 服务器参数设置")]),s._v(" "),a("h2",{attrs:{id:"general"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#general"}},[s._v("#")]),s._v(" general")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据文件存放的目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("datadir")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql.socket表示server和client在同一台服务器，并且使用localhost进行连接，就会使用socket进行连接")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("socket")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql/mysql.sock\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 存储mysql的pid")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("pid_file")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql/mysql.pid\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql服务的端口号")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql存储引擎")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("default_storage_engine")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("InnoDB\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当忘记mysql的用户名密码的时候，可以在mysql配置文件中配置该参数，跳过权限表验证，不需要密码即可登录mysql")]),s._v("\nskip-grant-tables\n")])])]),a("h2",{attrs:{id:"character"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#character"}},[s._v("#")]),s._v(" character")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 客户端数据的字符集")]),s._v("\ncharacter_set_client\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql处理客户端发来的信息时，会把这些数据转换成连接的字符集格式")]),s._v("\ncharacter_set_connection\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql发送给客户端的结果集所用的字符集")]),s._v("\ncharacter_set_results\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据库默认的字符集")]),s._v("\ncharacter_set_database\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql server的默认字符集")]),s._v("\ncharacter_set_server\n")])])]),a("h2",{attrs:{id:"connection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connection"}},[s._v("#")]),s._v(" connection")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql的最大连接数，如果数据库的并发连接请求比较大，应该调高该值")]),s._v("\nmax_connections\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制每个用户的连接个数")]),s._v("\nmax_user_connections\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql能够暂存的连接数量，当mysql的线程在一个很短时间内得到非常多的连接请求时，就会起作用，如果mysql的连接数量达到")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# max_connections时，新的请求会被存储在堆栈中，以等待某一个连接释放资源，如果等待连接的数量超过back_log,则不再接受连接资源")]),s._v("\nback_log\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql在关闭一个非交互的连接之前需要等待的时长")]),s._v("\nwait_timeout\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭一个交互连接之前需要等待的秒数")]),s._v("\ninteractive_timeout\n")])])]),a("h2",{attrs:{id:"log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[s._v("#")]),s._v(" log")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定错误日志文件名称，用于记录当mysqld启动和停止时，以及服务器在运行中发生任何严重错误时的相关信息")]),s._v("\nlog_error\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定二进制日志文件名称，用于记录对数据造成更改的所有查询语句")]),s._v("\nlog_bin\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定将更新记录到二进制日志的数据库，其他所有没有显式指定的数据库更新将忽略，不记录在日志中")]),s._v("\nbinlog_do_db\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定不将更新记录到二进制日志的数据库")]),s._v("\nbinlog_ignore_db\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定多少次写日志后同步磁盘")]),s._v("\nsync_binlog\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是否开启查询日志记录")]),s._v("\ngeneral_log\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定查询日志文件名，用于记录所有的查询语句")]),s._v("\ngeneral_log_file\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是否开启慢查询日志记录")]),s._v("\nslow_query_log\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定慢查询日志文件名称，用于记录耗时比较长的查询语句")]),s._v("\nslow_query_log_file\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置慢查询的时间，超过这个时间的查询语句才会记录日志")]),s._v("\nlong_query_time\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是否将管理语句写入慢查询日志")]),s._v("\nlog_slow_admin_statements\n")])])]),a("h2",{attrs:{id:"cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache"}},[s._v("#")]),s._v(" cache")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 索引缓存区的大小（只对myisam表起作用）")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%key_buffer_size%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询缓存的大小（未来版本被删除）")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%query_cache_size%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看缓存的相关属性")]),s._v("\nshow status like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Qcache%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQcache_free_blocks："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 缓存中相邻内存块的个数，如果值比较大，那么查询缓存中碎片比较多")]),s._v("\nQcache_free_memory："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询缓存中剩余的内存大小")]),s._v("\nQcache_hits："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示有多少此命中缓存")]),s._v("\nQcache_inserts："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示多少次未命中而插入")]),s._v("\nQcache_lowmen_prunes："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 多少条query因为内存不足而被移除cache")]),s._v("\nQcache_queries_in_cache："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前cache中缓存的query数量")]),s._v("\nQcache_total_blocks："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前cache中block的数量")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 超出此大小的查询将不被缓存")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'query_cache_limit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 缓存块最小大小    ")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'query_cache_min_res_unit'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 缓存类型，决定缓存什么样的查询")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 0 表示禁用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 表示将缓存所有结果，除非sql语句中使用sql_no_cache禁用查询缓存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2 表示只缓存select语句中通过sql_cache指定需要缓存的查询")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'query_cache_type'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个需要排序的线程分派该大小的缓冲区")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sort_buffer_size'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制server接受的数据包大小")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'max_allowed_packet'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示关联缓存的大小")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'join_buffer_size'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 线程池大小")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'thread_cache_size'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前线程池的状态")]),s._v("\nshow global status like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Thread%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nThreads_cached\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 代表当前此时此刻线程缓存中有多少空闲线程")]),s._v("\nThreads_connected\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 代表当前已建立连接的数量")]),s._v("\nThreads_created\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 代表最近一次服务启动，已创建现成的数量，如果该值比较大，那么服务器会一直再创建线程")]),s._v("\nThreads_running\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 代表当前激活的线程数")]),s._v("\n")])])]),a("h2",{attrs:{id:"innodb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innodb"}},[s._v("#")]),s._v(" innodb")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该参数指定大小的内存来缓冲数据和索引，最大可以设置为物理内存的80%")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'innodb_buffer_pool_size'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 主要控制innodb将log buffer中的数据写入日志文件并flush磁盘的时间点，值分别为0，1，2")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'innodb_flush_log_at_trx_commit'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置innodb线程的并发数，默认为0表示不受限制，\t如果要设置建议跟服务器的cpu核心数一致或者是cpu核心数的两倍")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'innodb_thread_concurrency'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此参数确定日志文件所用的内存大小，以M为单位")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'innodb_log_buffer_size'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此参数确定数据日志文件的大小，以M为单位")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'innodb_log_file_size'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以循环方式将日志文件写到多个文件中")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'innodb_log_files_in_group'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql读入缓冲区大小，对表进行顺序扫描的请求将分配到一个读入缓冲区")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'read_buffer_size'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysql随机读的缓冲区大小")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'read_rnd_buffer_size'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此参数确定为每张表分配一个新的文件")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'innodb_file_per_table'")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);