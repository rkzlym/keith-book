(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{439:function(s,t,a){"use strict";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"linux常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux常用命令"}},[s._v("#")]),s._v(" Linux常用命令")]),s._v(" "),a("p",[a("strong",[s._v("从指定url下载资源")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://download.redis.io/releases/redis-5.0.5.tar.gz\n")])])]),a("p",[a("strong",[s._v("解压tar.gz")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xf xxx.tar.gz\n")])])]),a("p",[a("strong",[s._v("Linux开机启动项目录")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d\n")])])]),a("p",[a("strong",[s._v("Linux环境变量")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/profile\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启环境变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" /etc/profile\n")])])]),a("p",[a("strong",[s._v("根据进程名查看运行进程")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -ef "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" redis\n")])])]),a("p",[a("strong",[s._v("nc命令")])]),s._v(" "),a("div",{staticClass:"language-powershell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装包")]),s._v("\nyum install "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("y nmap"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("ncat\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监听TCP/UDP端口")]),s._v("\nnc localhost 6379\n")])])]),a("p",[a("strong",[s._v("全局搜索文件")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" / -name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.err"')]),s._v("\n")])])]),a("p",[a("strong",[s._v("netstat")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" -anp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看Tcp连接")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" -natp\n")])])]),a("p",[a("strong",[s._v("根据PID终止进程")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" -9 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[a("strong",[s._v("查看机器负载")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),s._v(" -h\n")])])]),a("p",[a("strong",[s._v("SpringBoot 后台启动")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" java -jar myproject.jar "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("myproject.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n\n命令详解：\nnohup：不挂断地运行命令，退出帐户之后继续运行相应的进程。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("myproject.log：控制台输出到myproject.log日志文件中。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v("：标准错误重定向到标准输出。\n最后的"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("：让改作业在后台运行。\n")])])]),a("p",[s._v("查看进程数")]),s._v(" "),a("p",[s._v("pstree")]),s._v(" "),a("p",[s._v("管道")]),s._v(" "),a("ol",[a("li",[s._v("衔接：前一个命令的输出作为后一个命令的输入")]),s._v(" "),a("li",[s._v("管道会触发创建 子进程")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $$ 优先级高于 |")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$$")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$BASHPID")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v("\n")])])]),a("p",[s._v("父子进程")]),s._v(" "),a("p",[s._v("/bin/bash 开启一个子进程")]),s._v(" "),a("p",[s._v("父子进程间数据是隔离的，但是父进程可以使用 export 使子进程看到数据")]),s._v(" "),a("p",[s._v("export 的环境变量，子进程修改不会影响父进程，父进程修改也不会影响子进程")])])}),[],!1,null,null,null);t.default=n.exports}}]);